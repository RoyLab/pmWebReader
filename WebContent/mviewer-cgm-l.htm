<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>图像浏览</title>
    <script language="javascript">
        ///设置媒体网址，如果src为空，则什么内容也不显示。type：0图形；type：1多媒体yyyyyyyyyyyyyy
        var newHotspots;
        var OldHotspots;
        var isConpareHighlight=false;
        var positionx;
        var positiony;
        
        
        var isBeginDraw=true;
        
        function SetHotspots(hotspots)
        {
            isConpareHighlight=true;
            newHotspots=hotspots;
            
            if(OldHotspots==undefined)
               HighlightNodes(newHotspots);
            else
              ConpareHighlightNodes(newHotspots,OldHotspots);
            OldHotspots=newHotspots;
        }

        function unloadobject()
        {
         
        }
        
        function SetSrc(src,hotspots,isreload,eventList)
        {       
            if(src!="")
            {    
                  isConpareHighlight=false;
                  newHotspots=hotspots;
//                OldHotspots=hotspots;
                //Larson控件只支持tif格式位图，如果不是扩展名不是tif，转成tif。tip图片在出版时都已生成
   
                //------------------------------------------------------------------------
              
                            
                var fullsrc;
//                          var extpos = src.lastIndexOf('.') + 1;
//                           var ext = src.substr(extpos).toLowerCase();
//                            
//                            if (ext == 'tif' || ext == 'cgm'|| ext == 'tiff')
//                            {
//                            }
//                            else if(ext == 'bmp' || ext == 'jpg'|| ext == 'jpeg'|| ext == 'gif'|| ext == 'gif'||ext == 'png')
//                            {
//                                src = src.substr(0, extpos) + 'tif';
//                            }
//                            else
//                            {
//                                   document.write('<br><br><center><p style="font:bold 16px 微软雅黑;color:gray">不能显示该格式的图片</p></center>');
//                                   top.ApplicationContext.MainFrame.SetMultimediaToolbarState(2);
//                                   return;

//                            }    

                            src=top.ApplicationContext.UserInfo.GetICNTrueViewFile(src);
                           fullsrc = 'Manual\\' + src.toLowerCase();
                           //ImageFile=src;
                      
                        //ImageFile=fullsrc+'?time='+new Date().getHours().toString()+new Date().getMinutes().toString()+new Date().getMilliseconds().toString();
                if (top.ApplicationContext.ICommonService().UrlExists(fullsrc))
                   {
                         try{
                               
                                 //debugger;
                                 //var swf=new ActiveXObject("Larson CGM Viewer Control"); 
                                fullsrc=top.ApplicationContext.UserInfo.GetICNLocalizeUrl(fullsrc);     
                                if(loadImageQueryString(fullsrc,"yes"))
                                {
                                }
                                else{
                                    top.ApplicationContext.MainFrame.SetMultimediaToolbarState(2);
                                }
                            }
                            catch(e)
                            {
                                document.write('<br><br><center><p style="font:bold 16px 微软雅黑;color:gray">有错误，没有找到largon控件</p></center>');
                                top.ApplicationContext.MainFrame.SetMultimediaToolbarState(2);
                            }
                            
                            if(axCGM==undefined)
                            {
                              document.write('<br><br><center><p style="font:bold 16px 微软雅黑;color:gray">有错误，不能显示该图片</p></center>');
                              top.ApplicationContext.MainFrame.SetMultimediaToolbarState(2);
                              return;
                            }
                              
                   }
                else
                {
                    document.write('<br><br><center><p style="font:bold 16px 微软雅黑;color:gray">文件不存在</p></center>');
                    top.ApplicationContext.MainFrame.SetMultimediaToolbarState(2);
                    return;
                 }
                 
                 
                  //设置控件手型状态
                  //var pressed=top.ApplicationContext.MainFrame.GetMultimediaViewerPressState();
                  //var panmode = (pressed ? 1 : 0); 
                  //SetPanMode(panmode);
                                   
            }
        
        }
        
        function UrlExists(url)
        {
            var endIndex=url.indexOf('#');
	        var xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	        
	        if(endIndex!=-1)
	            url=url.substring(0,endIndex);
	        xmlhttp.open("GET", url, false);
	        try
	        {
		        xmlhttp.send();
		        
		        if (xmlhttp.status == 404)
		            return false;
		            
		        return true;
	        }
	        catch(e)
	        {
		        return false;
	        }
        }
        
        function Init()
        {
       
            //axCGM.PictureRotation = 0;
            
            //初始化Pan状态
            //SetPanMode(parent.PanMode);
        }  
                                                                
        var framestylel;
        function showDIV(tempdiv,x,y)
        {
            //myDIV=downloadDIV;
            //获取当前鼠标左键按下的位置，据此定义DIV显示位置
            var myDiv;
            var myA;
            var divnumber=0;
            var rg=new RegExp("A><A","g");
              
             tempdiv=tempdiv.replace(rg,"A>|</BR><A");
            
            //myDiv=document.frames.hospotframe.document.getElementsByTagName("div");
            
            document.frames.hospotframe.document.write(tempdiv);
            
            //让DIV显示，同时加上事件
            myDiv=document.frames.hospotframe.document.getElementsByTagName("div");
            divnumber=myDiv.length;
            if(divnumber>0)
            {
             for(var i=0;i<divnumber-1;i++)
             {
                myDiv[i].style.display='none';
             }
             myDiv[divnumber-1].style.display='block';
             myDiv[divnumber-1].style.left=0;
             myDiv[divnumber-1].style.top=0;            
             myA=myDiv[divnumber-1].getElementsByTagName("a");

             

               if(myA.length>1)
               {
                      for(var i=0;i<myA.length;i++)
                      {
//                        var ahref=myA[i].href;
//                        if(ahref.indexOf('IETM.Reference')>-1)
//                        {
//                          index=ahref.indexOf('.');
//                          ahref=ahref.substring(index);
//                          ahref="javascript:top.ApplicationContext.IIETM()"+ahref;
//                          myA[i].href=ahref;
//                         
//                        }
                         myA[i].onclick=function(){ frameonclick(); };

                      }
               }  
               else if(myA[0]!=undefined)
               {
                     //showrefs(myA[0].href,myA[0]);
                    var ahref=myA[0].href;
                    if(myA[0].className=="insideXref")
                    {   
                        if(ahref.indexOf('InsideXref(')!=-1)
                        {
                            ahref=ahref.substring(ahref.indexOf('http'),ahref.indexOf(',')-1);
                            top.ApplicationContext.IIETM().Reference.InsideXref(ahref,myA[0].tget);

                        }
                        else if(ahref.indexOf('GotoInsideXref(')!=-1)
                        {
                            ahref=ahref.substring(ahref.indexOf('http'),ahref.indexOf(',')-1);
                            top.ApplicationContext.IIETM().Process.GotoInsideXref(ahref);
                        }
                    } 
                    else if(myA[0].className=="outsideXref")
                    {
                        if(ahref.indexOf('OutsideXref(')!=-1)
                        {
                            ahref=ahref.substring(ahref.indexOf('http'),ahref.indexOf(',')-1);
                            top.ApplicationContext.IIETM().Reference.OutsideXref(ahref);
                        }
                        else if(ahref.indexOf('GotoOutsideXref(')!=-1)
                        {
                            ahref=ahref.substring(ahref.indexOf('http'),ahref.indexOf(',')-1);
                            top.ApplicationContext.IIETM().Process.GotoOutsideXref(ahref,myA[0].dmtarget);
                        }
                    } 
                       else if(myA[0].className=="outsideXreftp")
                    {
                        if(ahref.indexOf('OutsideXreftp(')!=-1)
                        {
                            ahref=ahref.substring(ahref.indexOf('http'),ahref.indexOf(',')-1);
                            top.ApplicationContext.IIETM().Reference.OutsideXreftp(ahref);
                        }
                     
                    } 
                    else if(myA[0].className=='')
                    {
                        top.ApplicationContext.IIETM().Reference.InsideXref(ahref,'');
                    }
                     return;
               }
               else
               {
                    return;
               }
            } 
           else
           {
                   return;
           }
          
          
            
            document.frames.hospotframe.document.close();
            
            

            
            framestylel=document.all.hospotframe;
            
            
            framestylel.style.position="absolute";  
            
            framestylel.style.display='block'; 
            
            framestylel.onblur=function(){ frameonclick(); };
            
            framestylel.focus();
            
            
            var Width=framestylel.clientWidth;
            
            var Height=framestylel.clientHeight;
            
            
            if(Height>document.body.clientHeight/2)
                framestylel.style.height=document.body.clientHeight/2;
             else
               framestylel.style.height=Height;
                
            if(Width>document.body.clientWidth/2)
                framestylel.style.width=document.body.clientWidth/2;
             else
                framestylel.style.width=Width;
            
            if(y>document.body.clientHeight/2)
            {
                framestylel.style.top=document.body.scrollTop+y-framestylel.offsetHeight;
            }
            else
            {
                framestylel.style.top=document.body.scrollTop+y;
            }
            if(x>document.body.clientWidth/2)
            {
                framestylel.style.left=document.body.scrollLeft+x- framestylel.offsetWidth;
            }
            else
            {
                framestylel.style.left=document.body.scrollLeft+x;
            }
            

        }
        
     
        function frameonclick()
        {
             if(framestylel!=null && framestylel.style.display!='none')
             {
               framestylel.style.display='none';
               //parent.SetSrc(null, 0, null,true);
             }
        }
        
         function keydown(){
          if(window.event!=null)
            {
                  if(event.keyCode==8)
                        event.returnValue=false;                    
                  if(event.altKey&&event.keyCode==39)
                       event.returnValue=false;
                   if(event.altKey&&event.keyCode==37)
                       event.returnValue=false;
            }
       }
    </script>
    
    <script language="javascript" for="axCGM" event="OnLButtonDown(x,y);">
     if(top.ifmMultimediaViewer!=undefined)
        top.ifmMultimediaViewer.window.multiframe.frameonclick();
        positionx=x+10;
        positiony=y-10;
        
      var resizer=top.ApplicationContext.Reziser;
      if(resizer!=null)
      {
            var box = resizer.proxy.getBox();
            if(box.width!=0)
                resizer.onMouseUp();
      }
    </script>
    
     <script language="javascript" for="axCGM" event="OnUserZoom(updown);">
     if(window.parent.window.zoom!=undefined)
     {
       var multimediaViewer;
       if(window.parent.window.location.href.indexOf('mviewerfullScreen.html')!=-1)
            multimediaViewer=top.Ext.WindowMgr.get('FullMultimediaViewer');
       else
            multimediaViewer=top.ApplicationContext.MainFrame.m_Wiever.MultimediaViewer;
            
       if(window.parent.window.zoom>=axCGM.ZoomFactor)
           multimediaViewer.m_btnSetPanMode.setDisabled(true);
       else
           multimediaViewer.m_btnSetPanMode.setDisabled(false);
      }
    </script>
    
     <script language="javascript" for="axCGM" event="OnUserPan(sender,e);">
      //return false;
    </script>
    
    
     <script language="javascript" for="axCGM" event="OnBeginDraw();">
      if(isBeginDraw)//防止画两次
      {
        inInit();
            var oldSpots=OldHotspots;
            clearAllCgmHotspot();
            OldHotspots=oldSpots;
        isBeginDraw=false;
      }
      </script>
     <script language="javascript" for="axCGM" event="OnEndDraw();">
     if(window.parent.window.zoom==0)
        window.parent.window.zoom=axCGM.ZoomFactor;
        
      if(!isBeginDraw)
      {
         if(!isConpareHighlight)
         {
            SetHotspots(newHotspots);
            isConpareHighlight=true;
         }
         else
            HighlightNodes(OldHotspots);
         isBeginDraw=true;
      }
    </script>

    <script language="javascript" for="axCGM" event="OnClickObject(objectId,objectName);">
             var tempdiv;
             var gobjectID=objectId; //因为objectId是一个方法，也是该事件的属性，所以监视看不出来。
             var ietm=top.ApplicationContext.IIETM();
             if(ietm==undefined)
                return;
                
             var ipd=ietm.IPD;
             var graphic=ietm.Graphic;
             
             if(ipd!=undefined && ipd.isIpdModule()){
                clearAllCgmHotspot();
                ipd.locateCsnRow(objectName);
             }
             else{
                 if(gobjectID!="IsoG1")//larson点击图片时而没有点击到热点，gobjectID等于"IsoG1"
                 {
                    clearAllCgmHotspot();
                    if (graphic!=undefined)
                        tempdiv=graphic.LocateHospot(gobjectID,objectName);
                        
                   if(typeof tempdiv!='undefined')
                     showDIV(tempdiv,positionx,positiony);
    //               else
    //                 alert('没有找到对应的链接！');
                 }
            }
    </script>
    
    <script src="resources/js/MIME/graphic_l.js" type="text/javascript"></script>
    
</head>
<body onkeydown="keydown();" scroll="no" leftmargin="0" rightmargin="0" topmargin="0" bottommargin="0"  onload="Init();">
    <iframe id="hospotframe" frameborder="1"  style="position: absolute; z-index: 9998;display: none"></iframe>
    <!--  <object classid="clsid:2FA0A680-F4D3-11D2-BD9C-0000B436855E" id="axCGM"  border="0" width="100%" height="100%">
        <param name="CGMPath" value="" />
        <param name="ShowHideToolbar" value="0" />
        <center>
            <p style="font:bold 16px 微软雅黑;color:gray"><br />控件加载失败，请点击<a href="resources/else/CGMReaderInstall.exe">下载</a>并安装<br />注意：请在弹出界面中点击"运行"按钮</p>
            <p><img src="resources/images/ax-download-1.png" /></p>
            <p><img src="resources/images/ax-download-2.png" /></p>
        </center>
    </object>  -->
     <div id="mainForm:imageDiv"></div>
</body>
</html>
